<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.pojo.Order" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="shipping_id" property="shippingId" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="postage" property="postage" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKey" parameterType="com.shopping.pojo.Order" >
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
    order_no = #{orderNo,jdbcType=BIGINT},
    shipping_id = #{shippingId,jdbcType=INTEGER},
    payment = #{payment,jdbcType=DECIMAL},
    payment_type = #{paymentType,jdbcType=INTEGER},
    postage = #{postage,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    payment_time = #{paymentTime,jdbcType=TIMESTAMP},
    send_time = #{sendTime,jdbcType=TIMESTAMP},
    end_time = #{endTime,jdbcType=TIMESTAMP},
    close_time = #{closeTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from t_order
  </select>

  <select id="selectByUID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from t_order
    where user_id = #{uid,jdbcType=INTEGER} order by id desc
  </select>

  <select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from t_order
    where order_no = #{orderNo}
  </select>
  <insert id="insert" parameterType="com.shopping.pojo.Order" >
    insert into t_order (id, user_id, order_no,
      shipping_id, payment, payment_type,
      postage, status, payment_time,
      send_time, end_time, close_time,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT},
      #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER},
      #{postage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP},
      #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <!--+++++++++++++++++++++++++++++++++++++++++++++-->
</mapper>